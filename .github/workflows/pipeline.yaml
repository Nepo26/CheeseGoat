name: 'First Challenge - CI/CD Pipeline'

on:
  workflow_dispatch:
  push:
    paths:
      - 'chall_1/**'
    branches:
      - main

permissions:
  id-token: write
  contents: read
  actions: read

env:
  tf_version: '1.9.7'
  environment: 'global'
  region: 'us-east-1'


jobs:
  tf_create_ecr:
    name: "Create ECR"
    uses: "./.github/workflows/terragrunt.yml"
    with:
      working-directory: "chall_1/"
      environment: "global"
      region: "us-east-1"
      tf_version: "1.9.7"
      generate_artifacts: true
      run_output: true
      apply: true
    permissions:
      id-token: write
      contents: read
      actions: read
    secrets:
      global_account_id: ${{secrets.GLOBAL_ACCOUNT_ID}}
      mgmt_account_id: ${{secrets.MGMT_ACCOUNT_ID}}
      dev_account_id: ${{secrets.DEV_ACCOUNT_ID}}
      token: ${{secrets.GITHUB_TOKEN}}
      terraform_iam_role: ${{secrets.TERRAFORM_IAM_ROLE}}

  build_image:
    runs-on: ubuntu-latest
    needs: tf_create_ecr
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Show ECR Info
        run: "echo artifact_url=${{ needs.tf_create_ecr.outputs.artifact_url }}"

      - uses: actions/download-artifact@v4
        id: download-artifact
        with:
          name: ${{needs.tf_create_ecr.outputs.artifact-id}}

      - run: "cat ${{ steps.download-artifact.outputs.download-path }}/terraform-output-artifacts/output.json | jq -r '.ecr_name.value' "

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: "chall_1/app/"
          push: false
          load: true
          tags: user/app:latest

      - name: Authenticating to AWS using OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{secrets.TERRAFORM_IAM_ROLE}}
          aws-region: ${{env.region}}
