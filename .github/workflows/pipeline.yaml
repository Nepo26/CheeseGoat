name: 'First Challenge - CI/CD Pipeline'

on:
  workflow_dispatch:
  push:
    paths:
      - 'chall_1/**'
    branches:
      - main

permissions:
  id-token: write
  contents: read
  actions: read

env:
  tf_version: '1.9.7'
  environment: 'global'
  region: 'us-east-1'


jobs:
  tf_create_ecr:
    name: "Create ECR"
    uses: './.github/workflows/terragrunt.yml'
    with:
      working-directory: "chall_1/"
      environment: ${{ env.environment }}
      region: ${{ env.region }}
      tf_version: ${{ env.tf_version }}
    secrets: inherit

#    runs-on: ubuntu-latest
#    env:
#      GLOBAL_ACCOUNT_ID: ${{secrets.GLOBAL_ACCOUNT_ID}}
#      MGMT_ACCOUNT_ID: ${{secrets.MGMT_ACCOUNT_ID}}
#      DEV_ACCOUNT_ID: ${{secrets.DEV_ACCOUNT_ID}}
#    defaults:
#      run:
#        working-directory: 'chall_1/'
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v4
#
#      - name: Set up terraform
#        uses: hashicorp/setup-terraform@v3
#        with:
#          terraform_version: "${{ env.tf_version }}"
#
#      - name: Set up Terragrunt
#        uses: jaxxstorm/action-install-gh-release@v1.13.0
#        with:
#          token: '${{ github.token }}'
#          repo: gruntwork-io/terragrunt
#          asset-name: "terragrunt_linux_amd64"
#          extension-matching: disable
#          rename-to: terragrunt
#          chmod: 0755
#
#      - name: Authenticating to AWS using OIDC
#        uses: aws-actions/configure-aws-credentials@v4
#        with:
#          role-to-assume: ${{secrets.TERRAFORM_IAM_ROLE}}
#          aws-region: ${{env.region}}
#
#      - name: Format Terraform
#        run: "make fmt ENV=${{env.environment}}"
#
#      - name: Plan Terraform
#        run: "make plan ENV=${{env.environment}}"

  build_image:
    runs-on: ubuntu-latest
    needs: tf_create_ecr
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: "chall_1/app/"
          push: false
          load: true
          tags: user/app:latest
      - name: Authenticating to AWS using OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{secrets.TERRAFORM_IAM_ROLE}}
          aws-region: ${{env.region}}
